services:
  app:
    build: .
    container_name: shop-api-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
      - kafka
    networks:
      - shop-net
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: report-topic

  web:
    image: nginx:latest
    container_name: shop-api-web
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - shop-net

  db:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - pgdata:/var/lib/postgresql/data:rw
    networks:
      - shop-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: shop-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - shop-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: shop-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - shop-net

networks:
  shop-net:
    driver: bridge

volumes:
  pgdata:
